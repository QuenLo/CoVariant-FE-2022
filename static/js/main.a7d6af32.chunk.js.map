{"version":3,"sources":["actions.js","reducer.js","MapChart.js","nextApp.js","App.js","reportWebVitals.js","index.js"],"names":["SET_COUNTRIES","SET_ALL_USA","SET_TOOL_TIP_CONTENT","setTooltipContent","toolTipContent","type","initialState","countries","allUsa","weekOptions","stateOptions","virusOptions","mapFormat","MapChart","dispatch","useDispatch","useState","weeks","setWeeks","states","setStates","allVirus","setAllVirus","curTime","setCurTime","curVirus","setCurVirus","curMap","setCurMap","maxCount","setMaxCount","useSelector","state","useEffect","length","res","Object","entries","key","value","push","colorSets","colorScale","scaleQuantile","domain","map","d","number","range","offsets","VT","NH","MA","RI","CT","NJ","DE","MD","DC","style","display","paddingTop","onChange","event","chosenVirus","target","allCountries","mapRow","data","id","isNaN","maxVal","forEach","element","console","log","virus","paddingLeft","chosenTime","weekOption","paddingRight","color","width","height","background","projection","geography","geographies","geo","cur","find","s","val","stroke","onMouseEnter","onMouseLeave","fill","rsmKey","centroid","geoCentroid","keys","indexOf","coordinates","y","fontSize","textAnchor","subject","dx","dy","x","alignmentBaseline","URL","App","props","color_set","counties_regions_set","content","fetch","then","json","setCountries","setAllUsa","name","Area","dataKey","this","fillOpacity","x1","y1","x2","y2","offset","stopColor","stopOpacity","thisdata","ID","className","alignItems","justifyContent","ResponsiveContainer","AreaChart","margin","top","right","left","bottom","Legend","verticalAlign","iconType","oneLinearGradient","XAxis","YAxis","CartesianGrid","strokeDasharray","Tooltip","oneArea","county","Nav","Item","Link","eventKey","cursor","filter","country","Tab","Pane","onePlot","Spinner","animation","region","Container","defaultActiveKey","at","Row","Col","sm","variant","oneNav","Content","oneTabPane","indx","sty","fluid","eachCounty","position","zIndex","Navbar","bg","Brand","href","NavDropdown","title","padding","callingAll","idx","eachRegion","Card","Body","Title","Text","Button","marginLeft","Footer","React","Component","connect","store","createStore","action","Set","add","week","Array","from","preApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAAaA,EAAgB,gBAChBC,EAAc,cACdC,EAAuB,uBAU7B,SAASC,EAAkBC,GAC9B,MAAO,CAACC,KAAMH,EAAsBE,kBCPxC,IAsIME,EAAe,CACjBC,UAAW,GACXC,OAAO,GACPC,YAAa,GACbC,aA1Ic,CACd,GAAM,UACT,GAAM,SACN,GAAM,UACN,GAAM,WACN,GAAM,aACN,GAAM,WACN,GAAM,cACN,GAAM,WACN,GAAM,UACN,GAAM,UACN,GAAM,SACN,GAAM,QACN,GAAM,WACN,GAAM,UACN,GAAM,OACN,GAAM,SACN,GAAM,WACN,GAAM,YACN,GAAM,QACN,GAAM,WACN,GAAM,gBACN,GAAM,WACN,GAAM,YACN,GAAM,cACN,GAAM,WACN,GAAM,UACN,GAAM,WACN,GAAM,SACN,GAAM,gBACN,GAAM,aACN,GAAM,aACN,GAAM,WACN,GAAM,iBACN,GAAM,eACN,GAAM,OACN,GAAM,WACN,GAAM,SACN,GAAM,eACN,GAAM,eACN,GAAM,iBACN,GAAM,eACN,GAAM,YACN,GAAM,QACN,GAAM,OACN,GAAM,UACN,GAAM,WACN,GAAM,aACN,GAAM,gBACN,GAAM,YACN,GAAM,UAEN,GAAM,iBACN,GAAM,uBACN,GAAM,iCACN,GAAM,OACN,GAAM,mBACN,GAAM,2BACN,GAAM,QACN,GAAM,cACN,GAAM,iBAEN,GAAM,wBACN,GAAM,sBACN,GAAM,wBA2EHC,aAPa,CAAC,UAAW,QAAQ,OAAO,QAAQ,UAAU,QAAQ,MAAM,OAAO,SAAS,SAAS,QAAQ,gBAQzGC,UAxEc,CACd,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,KAAM,IAAO,KAAM,OAAU,GACrC,CAAE,GAAM,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","file":"static/js/main.a7d6af32.chunk.js","sourcesContent":["export const SET_COUNTRIES = \"SET_COUNTRIES\";\nexport const SET_ALL_USA = \"SET_ALL_USA\";\nexport const SET_TOOL_TIP_CONTENT = \"SET_TOOL_TIP_CONTENT\";\n\nexport function setCountries(countries) {\n    return {type: SET_COUNTRIES, countries}\n}\n\nexport function setAllUsa(allUsa) {\n    return {type: SET_ALL_USA, allUsa}\n}\n\nexport function setTooltipContent(toolTipContent) {\n    return {type: SET_TOOL_TIP_CONTENT, toolTipContent}\n}","import {\n    SET_COUNTRIES,\n    SET_ALL_USA,\n    SET_TOOL_TIP_CONTENT,\n} from \"./actions\";\n\nconst mapStates = {\n    \"AL\": \"Alabama\",\n\t\"AK\": \"Alaska\",\n\t\"AZ\": \"Arizona\",\n\t\"AR\": \"Arkansas\",\n\t\"CA\": \"California\",\n\t\"CO\": \"Colorado\",\n\t\"CT\": \"Connecticut\",\n\t\"DE\": \"Delaware\",\n\t\"FL\": \"Florida\",\n\t\"GA\": \"Georgia\",\n\t\"HI\": \"Hawaii\",\n\t\"ID\": \"Idaho\",\n\t\"IL\": \"Illinois\",\n\t\"IN\": \"Indiana\",\n\t\"IA\": \"Iowa\",\n\t\"KS\": \"Kansas\",\n\t\"KY\": \"Kentucky\",\n\t\"LA\": \"Louisiana\",\n\t\"ME\": \"Maine\",\n\t\"MD\": \"Maryland\",\n\t\"MA\": \"Massachusetts\",\n\t\"MI\": \"Michigan\",\n\t\"MN\": \"Minnesota\",\n\t\"MS\": \"Mississippi\",\n\t\"MO\": \"Missouri\",\n\t\"MT\": \"Montana\",\n\t\"NE\": \"Nebraska\",\n\t\"NV\": \"Nevada\",\n\t\"NH\": \"New Hampshire\",\n\t\"NJ\": \"New Jersey\",\n\t\"NM\": \"New Mexico\",\n\t\"NY\": \"New York\",\n\t\"NC\": \"North Carolina\",\n\t\"ND\": \"North Dakota\",\n\t\"OH\": \"Ohio\",\n\t\"OK\": \"Oklahoma\",\n\t\"OR\": \"Oregon\",\n\t\"PA\": \"Pennsylvania\",\n\t\"RI\": \"Rhode Island\",\n\t\"SC\": \"South Carolina\",\n\t\"SD\": \"South Dakota\",\n\t\"TN\": \"Tennessee\",\n\t\"TX\": \"Texas\",\n\t\"UT\": \"Utah\",\n\t\"VT\": \"Vermont\",\n\t\"VA\": \"Virginia\",\n\t\"WA\": \"Washington\",\n\t\"WV\": \"West Virginia\",\n\t\"WI\": \"Wisconsin\",\n\t\"WY\": \"Wyoming\",\n\t// Territories\n\t\"AS\": \"American Samoa\",\n\t\"DC\": \"District of Columbia\",\n\t\"FM\": \"Federated States of Micronesia\",\n\t\"GU\": \"Guam\",\n\t\"MH\": \"Marshall Islands\",\n\t\"MP\": \"Northern Mariana Islands\",\n\t\"PW\": \"Palau\",\n\t\"PR\": \"Puerto Rico\",\n\t\"VI\": \"Virgin Islands\",\n\t// Armed Forces (AE includes Europe, Africa, Canada, and the Middle East)\n\t\"AA\": \"Armed Forces Americas\",\n\t\"AE\": \"Armed Forces Europe\",\n\t\"AP\": \"Armed Forces Pacific\",\n\n}\n\nconst mapFormat = [\n    { \"id\": \"AL\", \"val\": \"01\", \"number\": 0 },\n    { \"id\": \"AK\", \"val\": \"02\", \"number\": 0 },\n    { \"id\": \"AS\", \"val\": \"60\", \"number\": 0 },\n    { \"id\": \"AZ\", \"val\": \"04\", \"number\": 0 },\n    { \"id\": \"AR\", \"val\": \"05\", \"number\": 0 },\n    { \"id\": \"CA\", \"val\": \"06\", \"number\": 0 },\n    { \"id\": \"CO\", \"val\": \"08\", \"number\": 0 },\n    { \"id\": \"CT\", \"val\": \"09\", \"number\": 0 },\n    { \"id\": \"DE\", \"val\": \"10\", \"number\": 0 },\n    { \"id\": \"DC\", \"val\": \"11\", \"number\": 0 },\n    { \"id\": \"FL\", \"val\": \"12\", \"number\": 0 },\n    { \"id\": \"FM\", \"val\": \"64\", \"number\": 0 },\n    { \"id\": \"GA\", \"val\": \"13\", \"number\": 0 },\n    { \"id\": \"GU\", \"val\": \"66\", \"number\": 0 },\n    { \"id\": \"HI\", \"val\": \"15\", \"number\": 0 },\n    { \"id\": \"ID\", \"val\": \"16\", \"number\": 0 },\n    { \"id\": \"IL\", \"val\": \"17\", \"number\": 0 },\n    { \"id\": \"IN\", \"val\": \"18\", \"number\": 0 },\n    { \"id\": \"IA\", \"val\": \"19\", \"number\": 0 },\n    { \"id\": \"KS\", \"val\": \"20\", \"number\": 0 },\n    { \"id\": \"KY\", \"val\": \"21\", \"number\": 0 },\n    { \"id\": \"LA\", \"val\": \"22\", \"number\": 0 },\n    { \"id\": \"ME\", \"val\": \"23\", \"number\": 0 },\n    { \"id\": \"MH\", \"val\": \"68\", \"number\": 0 },\n    { \"id\": \"MD\", \"val\": \"24\", \"number\": 0 },\n    { \"id\": \"MA\", \"val\": \"25\", \"number\": 0 },\n    { \"id\": \"MI\", \"val\": \"26\", \"number\": 0 },\n    { \"id\": \"MN\", \"val\": \"27\", \"number\": 0 },\n    { \"id\": \"MS\", \"val\": \"28\", \"number\": 0 },\n    { \"id\": \"MO\", \"val\": \"29\", \"number\": 0 },\n    { \"id\": \"MT\", \"val\": \"30\", \"number\": 0 },\n    { \"id\": \"NE\", \"val\": \"31\", \"number\": 0 },\n    { \"id\": \"NV\", \"val\": \"32\", \"number\": 0 },\n    { \"id\": \"NH\", \"val\": \"33\", \"number\": 0 },\n    { \"id\": \"NJ\", \"val\": \"34\", \"number\": 0 },\n    { \"id\": \"NM\", \"val\": \"35\", \"number\": 0 },\n    { \"id\": \"NY\", \"val\": \"36\", \"number\": 0 },\n    { \"id\": \"NC\", \"val\": \"37\", \"number\": 0 },\n    { \"id\": \"ND\", \"val\": \"38\", \"number\": 0 },\n    { \"id\": \"MP\", \"val\": \"69\", \"number\": 0 },\n    { \"id\": \"OH\", \"val\": \"39\", \"number\": 0 },\n    { \"id\": \"OK\", \"val\": \"40\", \"number\": 0 },\n    { \"id\": \"OR\", \"val\": \"41\", \"number\": 0 },\n    { \"id\": \"PW\", \"val\": \"70\", \"number\": 0 },\n    { \"id\": \"PA\", \"val\": \"42\", \"number\": 0 },\n    { \"id\": \"PR\", \"val\": \"72\", \"number\": 0 },\n    { \"id\": \"RI\", \"val\": \"44\", \"number\": 0 },\n    { \"id\": \"SC\", \"val\": \"45\", \"number\": 0 },\n    { \"id\": \"SD\", \"val\": \"46\", \"number\": 0 },\n    { \"id\": \"TN\", \"val\": \"47\", \"number\": 0 },\n    { \"id\": \"TX\", \"val\": \"48\", \"number\": 0 },\n    { \"id\": \"UM\", \"val\": \"74\", \"number\": 0 },\n    { \"id\": \"UT\", \"val\": \"49\", \"number\": 0 },\n    { \"id\": \"VT\", \"val\": \"50\", \"number\": 0 },\n    { \"id\": \"VA\", \"val\": \"51\", \"number\": 0 },\n    { \"id\": \"VI\", \"val\": \"78\", \"number\": 0 },\n    { \"id\": \"WA\", \"val\": \"53\", \"number\": 0 },\n    { \"id\": \"WV\", \"val\": \"54\", \"number\": 0 },\n    { \"id\": \"WI\", \"val\": \"55\", \"number\": 0 },\n    { \"id\": \"WY\", \"val\": \"56\", \"number\": 0 }\n  ]\n\n\nconst allVirus = [\"Options\", \"Alpha\",\"Beta\",\"Gamma\",\"Omicron\",\"Kappa\",\"Eta\",\"Iota\",\"Lambda\",\"others\",\"Delta\",\"non_variants\"];\n\nconst initialState = {\n    countries: [],\n    allUsa:[],\n    weekOptions: [],\n    stateOptions: mapStates,\n    virusOptions: allVirus,\n    mapFormat: mapFormat,\n    toolTipContent: ''\n}\n\n\nexport function userApp( state= initialState, action ) {\n    switch(action.type) {\n        case SET_COUNTRIES:\n            const allCountries = action.countries\n            const weekOptions = new Set()\n            for (let country of allCountries[0]) {\n                weekOptions.add(country.week)\n            }\n            \n            // console.log([...Object.values(mapStates)])\n\n            return {\n                ...state,\n                weekOptions: Array.from(weekOptions),\n                countries: action.countries\n            }\n        case SET_ALL_USA:\n            return {\n                ...state,\n                allUsa: action.allUsa\n            }\n        case SET_TOOL_TIP_CONTENT:\n            // console.log(action.toolTipContent)\n            return {\n                ...state,\n                toolTipContent: action.toolTipContent\n            }\n        default:\n            return state;\n    }\n}","import React, { useState, useEffect } from \"react\";\nimport { ComposableMap, Geographies, Geography, Marker, Annotation } from \"react-simple-maps\";\nimport { geoCentroid } from \"d3-geo\";\nimport { scaleQuantile } from \"d3-scale\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setTooltipContent } from \"./actions\";\n\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\";\n\nconst MapChart = () => {\n  const dispatch = useDispatch()\n  const [weeks, setWeeks] = useState([])\n  const [states, setStates] = useState([])\n  const [allVirus, setAllVirus] = useState([])\n  const [curTime, setCurTime] = useState()\n  const [curVirus, setCurVirus] = useState(\"Options\")\n  const [curMap, setCurMap] = useState([])\n  const [maxCount, setMaxCount] = useState(0)\n  // const [myCar, setMyCar] = useState(\"Volvo\");\n  const countries = useSelector((state) => state.countries)\n  const weekOptions = useSelector((state) => state.weekOptions)\n  const stateOptions = useSelector((state) => state.stateOptions)\n  const virusOptions = useSelector((state) => state.virusOptions)\n  const mapFormat = useSelector((state) => state.mapFormat)\n\n  useEffect(()=> {\n    if (weeks.length === 0) {\n      setWeeks(weekOptions)\n      setCurTime(weekOptions[weekOptions.length-1])\n    }\n\n    if (states.length === 0) {\n        const res = []\n        for (const [key, value] of Object.entries(stateOptions)) {\n          res.push({key, value})\n        }\n        setStates(res)\n    }\n\n    if (allVirus.length === 0) {\n      setAllVirus(virusOptions)\n    }\n\n    if (curMap.length === 0) {\n      setCurMap(mapFormat)\n    }\n\n  }, [weeks, weekOptions, states, stateOptions, allVirus, virusOptions, curMap, mapFormat])\n\n  // virus\n  const handleVirusChange = (event) => {\n    const chosenVirus = event.target.value\n    setCurVirus(chosenVirus)\n\n    const allCountries = countries[0]\n\n    const res = mapFormat.map((mapRow) => {\n      mapRow['number'] = 0\n      for (let data of allCountries) {\n        if (stateOptions[mapRow.id] === data['county'] && data['week'] === curTime) {\n          mapRow['number'] += isNaN(data[chosenVirus]) ? 0 : data[chosenVirus]\n        }\n      }\n      return mapRow\n    })\n    let maxVal = 0\n    res.forEach(element => {\n      console.log(element.number)\n      if (element.number > maxVal) {\n        maxVal = element.number\n      }\n    })\n    setMaxCount(maxVal)\n    // console.log(res)\n    setCurMap(res)\n  }\n\n  // time\n  const handleTimeChange = (event) => {\n    const chosenTime = event.target.value\n    setCurTime(chosenTime)\n    const allCountries = countries[0]\n    const res = mapFormat.map((mapRow) => {\n      mapRow['number'] = 0\n      for (let data of allCountries) {\n        if (stateOptions[mapRow.id] === data['county'] && data['week'] === chosenTime) {\n          mapRow['number'] += isNaN(data[curVirus]) ? 0 : data[curVirus]\n        }\n      }\n      return mapRow\n    })\n    let maxVal = 0\n    res.forEach(element => {\n      console.log(element.number)\n      if (element.number > maxVal) {\n        maxVal = element.number\n      }\n    })\n    setMaxCount(maxVal)\n    setCurMap(res)\n  }\n\n  const colorSets = [\n    \"#ffedea\",\n    \"#ffcec5\",\n    \"#ffad9f\",\n    \"#ff8a75\",\n    \"#ff5533\",\n    \"#e2492d\",\n    \"#be3d26\",\n    \"#9a311f\",\n    \"#782618\"\n  ]\n\n  const colorScale = scaleQuantile()\n    .domain(curMap.map(d => d.number))\n    .range(colorSets);\n\n  const offsets = {\n    VT: [50, -8],\n    NH: [34, 2],\n    MA: [30, -1],\n    RI: [28, 2],\n    CT: [35, 10],\n    NJ: [34, 1],\n    DE: [33, 0],\n    MD: [47, 10],\n    DC: [49, 21]\n  };\n\n  // console.log(stateOptions)\n\n  return (\n    <>\n      <form style={{ display: 'flex', paddingTop: '2rem' }}>\n        <label>\n          Virus:\n          <select value={curVirus} onChange={handleVirusChange}>\n            {\n              allVirus.length > 0 ? allVirus.map((virus) => {\n                return (\n                  <option key={virus} value={virus}>{virus}</option>\n                )\n              }) :  (<></>)\n            }\n          </select>\n        </label>\n        <label style={{ paddingLeft: '2rem' }}>\n          Time:\n          <select value={curTime} onChange={handleTimeChange}>\n            {\n              weeks.length > 0 ? weeks.map((weekOption) => {\n                return (\n                  <option key={weekOption} value={weekOption}>{weekOption}</option>\n                )\n              }) :  (<></>)\n            }\n          </select>\n        </label>\n        {maxCount !== 0 ? <label style={{ display: 'flex', paddingLeft: '2rem'}}>\n          <span style={{ paddingRight: '0.75rem'}}>0</span>\n          {colorSets.map(color => {\n            return (\n              <div key={color} style={{ width: '2rem', height: '2rem', background: `${color}`}}></div>\n            )\n          })}\n          <span style={{ paddingLeft: '0.75rem'}}>{maxCount}</span>\n        </label> : <></>}\n      </form>\n      <ComposableMap data-tip=\"\" projection=\"geoAlbersUsa\">\n        <Geographies geography={geoUrl}>\n          {({ geographies }) => (\n            <>\n              {geographies.map(geo => {\n                const cur = curMap.find(s => s.val === geo.id)\n                return (<Geography\n                  key={geo.rsmKey}\n                  stroke=\"#FFF\"\n                  geography={geo}\n                  onMouseEnter={() => {\n                    if(cur) dispatch(setTooltipContent(`${cur.number}`));\n                  }}\n                  onMouseLeave={() => {\n                    dispatch(setTooltipContent(\"\"));\n                  }}\n                  fill={cur ? colorScale(cur.number) : \"#EEE\"}\n                />)\n              })}\n              {geographies.map(geo => {\n                const centroid = geoCentroid(geo);\n                const cur = curMap.find(s => s.val === geo.id);\n                return (\n                  <g key={geo.rsmKey + \"-name\"}>\n                    {cur &&\n                      centroid[0] > -160 &&\n                      centroid[0] < -67 &&\n                      (Object.keys(offsets).indexOf(cur.id) === -1 ? (\n                        <Marker coordinates={centroid}>\n                          <text y=\"2\" fontSize={14} textAnchor=\"middle\">\n                            {cur.id}\n                          </text>\n                        </Marker>\n                      ) : (\n                        <Annotation\n                          subject={centroid}\n                          dx={offsets[cur.id][0]}\n                          dy={offsets[cur.id][1]}\n                        >\n                          <text x={4} fontSize={14} alignmentBaseline=\"middle\">\n                            {cur.id}\n                          </text>\n                        </Annotation>\n                      ))}\n                  </g>\n                );\n              })}\n            </>\n          )}\n        </Geographies>\n      </ComposableMap>\n    </>\n  );\n};\n\nexport default MapChart;","import './App.css';\nimport React from \"react\";\nimport {AreaChart, XAxis, YAxis, CartesianGrid, Tooltip, Area, Legend, ResponsiveContainer } from 'recharts';\nimport Button from 'react-bootstrap/Button';\nimport { Card, Col, Container, Nav, Navbar, NavDropdown, Row, Spinner, Tab } from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { connect } from 'react-redux';\nimport { setCountries, setAllUsa } from \"./actions\";\nimport MapChart from './MapChart';\nimport ReactTooltip from \"react-tooltip\";\n// const URL = \"https://raw.githubusercontent.com/hodcroftlab/covariants/master/cluster_tables/USAClusters_data.json\";\n// const URL = \"http://localhost:3001\"\nconst URL = \"https://covid-variant.herokuapp.com\"\n\nclass App extends React.Component {\n\n  color_set = {\n    \"Alpha\": \"#8884d8\",\n    \"Beta\": \"#82ca9d\",\n    \"Gamma\": \"#FF8D33\",\n    \"Delta\": \"#15CFBE\",\n    \"Eta\": \"#F950CF\",\n    \"Kappa\": \"#187C33\",\n    \"Iota\": \"#155972\",\n    \"Lambda\": \"#232EE4\",\n    \"Omicron\": \"#BFBF21\",\n    \"others\": \"#B42DF8\",\n    // \"non_variants\": \"#EA2323\"\n  }\n\n  counties_regions_set = {\n    \"New England\": [\"Connecticut\", \"Maine\", \"Massachusetts\", \"New Hampshire\", \"Rhode Island\", \"Vermont\"],\n    \"Mid-Atlantic\": [\"New Jersey\", \"New York\", \"Pennsylvania\"],\n    \"East North Central\": [\"Illinois\", \"Indiana\", \"Michigan\", \"Ohio\", \"Wisconsin\"],\n    \"West North Central\": [\"Iowa\", \"Kansas\", \"Minnesota\", \"Missouri\", \"Nebraska\", \"North Dakota\", \"South Dakota\"],\n    \"South Atlantic\": [\"Delaware\", \"Florida\", \"Georgia\", \"Maryland\", \"North Carolina\", \"South Carolina\", \"Virginia\", \"Washington DC\", \"West Virginia\"],\n    \"East South Central\": [\"Alabama\", \"Kentucky\", \"Mississippi\", \"Tennessee\"],\n    \"West South Central\": [\"Texas\", \"Arkansas\", \"Louisiana\", \"Oklahoma\"],\n    \"West Mountain\": [\"Arizona\", \"Colorado\", \"Idaho\", \"Montana\", \"Nevada\", \"New Mexico\", \"Utah\", \"Wyoming\"],\n    \"West Pacific\": [\"Alaska\", \"California\", \"Hawaii\", \"Oregon\", \"Washington\"],\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      content:\"\",\n    }\n  }\n\n  componentDidMount() {\n    fetch(`${URL}/getStates`)\n      .then(res => res.json())\n      .then(res => {\n        this.props.setCountries(res);\n      })\n\n    fetch(`${URL}/getAllUsa`)\n      .then(res => res.json())\n      .then(res => {\n        this.props.setAllUsa(res);\n      })\n  }\n\n  oneArea(name) {\n    let fill = \"url(#\" + name + \")\"\n    return (\n        <Area type=\"monotone\" dataKey={name} stroke={this.color_set[name]} fillOpacity={1} fill={fill}/>\n    )\n  }\n\n  oneLinearGradient(name) {\n    return (\n        <>\n          <linearGradient id={name} x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n            <stop offset=\"5%\" stopColor={this.color_set[name]} stopOpacity={0.8}/>\n            <stop offset=\"95%\" stopColor={this.color_set[name]} stopOpacity={0}/>\n          </linearGradient>\n        </>\n    )\n  }\n\n\n  onePlot(thisdata, ID) {\n    return (\n        <>\n          <div className=\"out-side\">\n            <div className=\"frame\">\n              <div id={ID} style={{width: '100vw', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n                <ResponsiveContainer width='80%' height={500}>\n                  <AreaChart width={1200} height={450} data={thisdata}\n                             margin={{top: 10, right: 30, left: 0, bottom: 0}}>\n                    <Legend verticalAlign=\"top\" height={72} iconType={\"square\"} width={\"100%\"}/>\n                    <defs>\n                      {/*<linearGradient id=\"Alpha\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">*/}\n                      {/*  <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>*/}\n                      {/*  <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>*/}\n                      {/*</linearGradient>*/}\n                      {(Object.keys(this.color_set)).map((virus) => (\n                          this.oneLinearGradient(virus)\n                      ))}\n                    </defs>\n                    <XAxis dataKey=\"week\"/>\n                    {/*<XAxis dataKey=\"week\">*/}\n                    {/*  <Label value=\"Date\" offset={0} position=\"insideBottom\" />*/}\n                    {/*</XAxis>*/}\n                    <YAxis/>\n                    <CartesianGrid strokeDasharray=\"3 3\"/>\n                    <Tooltip/>\n                    {/*<Area type=\"monotone\" dataKey=\"Alpha\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#Alpha)\" />*/}\n                    {(Object.keys(this.color_set)).map((virus) => (\n                        this.oneArea(virus)\n                    ))}\n                  </AreaChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n          </div>\n        </>\n    )\n  }\n\n\n  oneNav(county) {\n    return (\n        <Nav.Item>\n          <Nav.Link eventKey={county} style={{cursor:'pointer'}}>{county}</Nav.Link>\n        </Nav.Item>\n    )\n  }\n\n\n  oneTabPane(county) {\n    if( this.props.countries.length > 0 ){\n      const res = this.props.countries[0].filter(country => { \n        return country.county === county\n      })\n      return (\n          <Tab.Pane eventKey={county}>\n            {this.onePlot(res, {county})}\n          </Tab.Pane>\n      )\n    }else{\n     return(\n         <Tab.Pane eventKey={county}>\n          <div style={{width: '100%'}}>\n            <Spinner style={{display: 'flex', margin: 'auto'}} animation=\"border\" />\n          </div>\n           {/* <Spinner style={{\"textAlign\": \"center\"}} animation=\"border\" /> */}\n         </Tab.Pane>\n     )\n    }\n  }\n\n\n  eachCounty(region) {\n    return (\n        <Tab.Container id={region} defaultActiveKey={this.counties_regions_set[region].at(0)}>\n          <Row>\n            <Col sm={2}>\n              <Nav variant=\"pills\" className=\"flex-column\">\n                <strong>{region}</strong>\n                {(this.counties_regions_set[region]).map((county) => (\n                    this.oneNav(county)\n                ))}\n              </Nav>\n            </Col>\n            <Col sm={10}>\n              <Tab.Content>\n                {(this.counties_regions_set[region]).map((county) => (\n                    this.oneTabPane(county)\n                ))}\n              </Tab.Content>\n            </Col>\n          </Row>\n        </Tab.Container>\n    )\n  }\n\n\n  eachRegion(region, indx) {\n    const sty = indx % 2 ? {\"paddingTop\": \"40px\", \"paddingBottom\": \"40px\", \"background\": \"whitesmoke\"}\n        : {\"paddingTop\": \"40px\", \"paddingBottom\": \"40px\"}\n\n    return (\n        <Container id={region} style={sty} fluid>\n          {this.eachCounty(region)}\n        </Container>\n    )\n\n  }\n\n  callingAll(){\n    if(this.props.allUsa.length > 0){\n      return( this.onePlot(this.props.allUsa, \"ALL_USA\") )\n    }else{\n      return(\n        <div style={{width: '100%'}}>\n          <Spinner style={{display: 'flex', margin: 'auto'}} animation=\"border\" />\n        </div>\n      )\n    }\n  }\n\n  render() {\n\n    return (\n        <>\n          <div style={{position: 'fixed', width: '100%', zIndex: '1000'}}>\n            <Navbar bg=\"primary\" variant=\"dark\" >\n              <Container>\n                <Navbar.Brand href=\"#USA\">Covid Variants in United States</Navbar.Brand>\n                <Nav className=\"me-auto\">\n                  <Nav.Link href=\"#USA\">All</Nav.Link>\n                  <NavDropdown title=\"View by Counties\" id=\"regions\">\n                    <NavDropdown.Item href=\"#New England\">New England</NavDropdown.Item>\n                    <NavDropdown.Item href=\"#Mid-Atlantic\">Mid-Atlantic</NavDropdown.Item>\n                    <NavDropdown.Item href=\"#East North Central\">East North Central</NavDropdown.Item>\n                    <NavDropdown.Item href=\"#West North Central\">West North Central</NavDropdown.Item>\n                    <NavDropdown.Item href=\"#South Atlantic\">South Atlantic</NavDropdown.Item>\n                    <NavDropdown.Item href=\"#East South Central\">East South Central</NavDropdown.Item>\n                    <NavDropdown.Item href=\"#West South Central\">West South Central</NavDropdown.Item>\n                    <NavDropdown.Item href=\"#West Mountain\">West Mountain</NavDropdown.Item>\n                    <NavDropdown.Item href=\"#West Pacific\">West Pacific</NavDropdown.Item>\n                  </NavDropdown>\n                  {/* <Nav.Link href=\"https://usa-variant-zz85.surge.sh/\" target=\"_blank\">Vew Details</Nav.Link> */}\n                  <Nav.Link href=\"https://github.com/hodcroftlab/covariants\" target=\"_blank\">Data Sources</Nav.Link>\n                </Nav>\n              </Container>\n            </Navbar>\n          </div>\n          <div style={{paddingTop: '50px'}}></div>\n          <Container style={{\"background\": \"whitesmoke\"}} fluid>\n              <h2 style={{\"textAlign\": \"center\", \"paddingTop\": \"30px\"}} id=\"USA\">- Whole USA- </h2>\n              <div style={{padding: '0rem 8rem 0rem 8rem'}}>\n                <MapChart />\n              </div>\n              <ReactTooltip>{this.props.toolTipContent}</ReactTooltip>\n              {this.callingAll()}\n          </Container>\n          <div id=\"regions\">\n            {\n              Object.keys(this.counties_regions_set).map((region, idx) => (\n                  this.eachRegion(region, idx)\n              ))}\n          </div>\n\n          {/*Footer*/}\n          <Card className=\"text-center\">\n            <Card.Body>\n              <Card.Title>Overview of Variants in United States</Card.Title>\n              <Card.Text>\n                <strong>Class</strong>:2021 COMP/ELEC 425/554 + 2022 COMP 590 Computer Systems Architecture, Ray Simar\n                <br/>\n                {/* <strong>Team</strong>: Hope-Simpson, #1.10 - How might we display variants? */}\n                <br/>\n                <strong>Author</strong>:\n                <a href={\"https://github.com/baskvava\"}>Ying-Hsuan Chen</a> (yc144@rice.edu),\n                <a href={\"https://github.com/QuenLo\"}>Cyuan-Heng Luo</a> (quenluo@rice.edu),\n                <br/>\n                <a href=\"\">Yuxi Liang, </a>\n                <a href=\"\">Serena Chen, </a>\n                <a href=\"\">Zewen Xu, </a>\n                <a href=\"\">Jiacheng Sun, </a>\n                <a href=\"\">Mengying Xie </a>\n                <br/>\n                <strong>Thanks To</strong>: Emma B. Hodcroft. 2021. \"CoVariants: SARS-CoV-2 Mutations and Variants of\n                Interest.\" <a href={\"https://covariants.org/\"}>https://covariants.org/</a>\n              </Card.Text>\n              <Button variant=\"primary\" href={\"https://github.com/baskvava/CoVariant-BE-2022\"}>CoVariants (Github) - Backend</Button>\n              <Button variant=\"primary\" style={{marginLeft: '1.5rem'}} href={\"https://github.com/baskvava/CoVariant-FE-2022\"}>CoVariants (Github) - Frontend</Button>\n            </Card.Body>\n            <Card.Footer className=\"text-muted\">@2022 Rice Comp 554 Hope-Simpson</Card.Footer>\n          </Card>\n        </>\n    );\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    countries: state.countries,\n    allUsa: state.allUsa,\n    toolTipContent: state.toolTipContent\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setCountries: (countries) => dispatch(setCountries(countries)),\n    setAllUsa: (allUsa) => dispatch(setAllUsa(allUsa)),\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import './App.css';\nimport React  from 'react';\nimport { createStore} from \"redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport {userApp} from \"./reducer\";\n\n// Pages\nimport NextApp from './nextApp';\nimport {Provider} from \"react-redux\";\n\nconst store = createStore( userApp )\n\nexport default function preApp() {\n    return (\n        <Provider store={ store }>\n            <Router>\n                <NextApp/>\n            </Router>\n        </Provider>\n    );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}